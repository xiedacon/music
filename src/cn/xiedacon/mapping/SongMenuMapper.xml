<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xiedacon.dao.SongMenuDao">

	<resultMap type="cn.xiedacon.model.SongMenu" id="songMenuVo">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="icon" column="icon" />
		<result property="creatorId" column="creatorId" />
		<result property="creatorName" column="creatorName" />
		<result property="creatorIcon" column="creatorIcon" />
		<result property="userId" column="userId" />
		<result property="createTime" column="createTime" />
		<result property="introduction" column="introduction" />
		<result property="songNum" column="songNum" />
		<result property="collectionNum" column="collectionNum" />
		<result property="shareNum" column="shareNum" />
		<result property="commentNum" column="commentNum" />
		<result property="playNum" column="playNum" />

		<collection property="songMenuSecondTagList" javaType="java.util.List"
			ofType="cn.xiedacon.model.SongMenuSecondTag" resultMap="songMenuSecondTagVo"></collection>
	</resultMap>

	<resultMap type="cn.xiedacon.model.SongMenuSecondTag" id="songMenuSecondTagVo">
		<id property="id" column="secondTagId" />
		<result property="name" column="secondTagName" />
	</resultMap>

	<sql id="required_SELECT">
		SELECT
		s.id id,
		s.name name,
		s.icon icon,
	</sql>
	<sql id="min_simpleSongMenuVo_SELECT">
		<include refid="required_SELECT"></include>
		r.playNum playNum
	</sql>
	<sql id="simpleSongMenuVo_SELECT">
		<include refid="required_SELECT"></include>
		r.playNum playNum,
		s.creatorId creatorId,
		s.creatorName creatorName,
		s.userId userId,
		s.songNum songNum
	</sql>
	<sql id="songMenuVo_SELECT">
		<include refid="required_SELECT"></include>
		s.createTime createTime,
		s.introduction introduction,
		s.songnum songNum,
		u.id creatorId,
		u.name creatorName,
		u.icon creatorIcon,
		r.shareNum
		shareNum,
		r.commentNum commentNum,
		r.playNum playNum,
		r.collectionNum
		collectionNum,
		tss.id secondTagId,
		s.userId userId,
		tss.name
		secondTagName
	</sql>
	<sql id="count_SELECT">
		SELECT COUNT(s.id) count
	</sql>

	<sql id="songMenu_base_FROM">
		FROM songMenu_base s
	</sql>

	<sql id="id_WHERE">
		<where>
			s.id = #{id}
			AND s.visible = true
		</where>
	</sql>
	<sql id="secondTagId_WHERE">
		<where>
			sgr.tag_songMenu_secondId = #{secondTagId}
			AND s.userId is null
			AND s.visible = true
		</where>
	</sql>
	<sql id="creatorId_WHERE">
		<where>
			s.creatorId = #{creatorId}
			AND s.visible = true
		</where>
	</sql>
	<sql id="collectorId_WHERE">
		<where>
			ugs.collectorId = #{collectorId}
			AND s.visible = true
		</where>
	</sql>
	<sql id="exceptLove_WHERE">
		<where>
			s.userId is null
			AND s.visible = true
		</where>
	</sql>

	<sql id="songMenu_recored_JOIN">
		INNER JOIN songMenu_record r ON s.id = r.id
	</sql>
	<sql id="smi_gl_rsms_JOIN">
		LEFT JOIN smi_gl_rsms sgr ON s.id = sgr.songMenuId
	</sql>
	<sql id="user_base_JOIN">
		INNER JOIN user_base u ON s.creatorId = u.id
	</sql>
	<sql id="tag_songmenu_second_JOIN">
		LEFT JOIN tag_songmenu_second tss ON
		sgr.tag_songMenu_secondId = tss.id
	</sql>
	<sql id="user_gl_songmenu_JOIN">
		LEFT JOIN user_gl_songmenu ugs ON
		ugs.songMenuId = s.id
	</sql>

	<sql id="collectionNum_ORDERBY">
		ORDER BY r.collectionNum DESC, s.createTime DESC
	</sql>
	<sql id="createTime_ORDERBY">
		ORDER BY s.createTime DESC
	</sql>
	<sql id="userId_ORDERBY">
		ORDER BY s.userId DESC
	</sql>

	<sql id="LIMIT">
		LIMIT #{begin},#{limit}
	</sql>

	<select id="selectSongMenuById" resultMap="songMenuVo">
		<include refid="songMenuVo_SELECT"></include>
		<include refid="songMenu_base_FROM"></include>
		<include refid="songMenu_recored_JOIN"></include>
		<include refid="smi_gl_rsms_JOIN"></include>
		<include refid="user_base_JOIN"></include>
		<include refid="tag_songmenu_second_JOIN"></include>
		<include refid="id_WHERE"></include>
	</select>

	<select id="selectByLimit" resultType="cn.xiedacon.vo.SimpleSongMenuVo">
		<include refid="simpleSongMenuVo_SELECT"></include>
		<include refid="songMenu_base_FROM"></include>
		<include refid="songMenu_recored_JOIN"></include>
		<include refid="exceptLove_WHERE"></include>
		<include refid="createTime_ORDERBY"></include>
		<include refid="LIMIT"></include>
	</select>

	<select id="selectByLimitOrderByCollectionNum" resultType="cn.xiedacon.vo.SimpleSongMenuVo">
		<include refid="simpleSongMenuVo_SELECT"></include>
		<include refid="songMenu_base_FROM"></include>
		<include refid="songMenu_recored_JOIN"></include>
		<include refid="exceptLove_WHERE"></include>
		<include refid="collectionNum_ORDERBY"></include>
		<include refid="LIMIT"></include>
	</select>

	<select id="selectCount" resultType="int">
		<include refid="count_SELECT"></include>
		<include refid="songMenu_base_FROM"></include>
		<include refid="exceptLove_WHERE"></include>
	</select>

	<select id="selectBySecondTagIdOrderByCollectionNumLimit"
		resultType="cn.xiedacon.vo.SimpleSongMenuVo">
		<include refid="simpleSongMenuVo_SELECT"></include>
		<include refid="songMenu_base_FROM"></include>
		<include refid="songMenu_recored_JOIN"></include>
		<include refid="smi_gl_rsms_JOIN"></include>
		<include refid="secondTagId_WHERE"></include>
		<include refid="collectionNum_ORDERBY"></include>
		<include refid="LIMIT"></include>
	</select>

	<select id="selectBySecondTagIdLimit" resultType="cn.xiedacon.vo.SimpleSongMenuVo">
		<include refid="simpleSongMenuVo_SELECT"></include>
		<include refid="songMenu_base_FROM"></include>
		<include refid="songMenu_recored_JOIN"></include>
		<include refid="smi_gl_rsms_JOIN"></include>
		<include refid="secondTagId_WHERE"></include>
		<include refid="createTime_ORDERBY"></include>
		<include refid="LIMIT"></include>
	</select>

	<select id="selectCountBySecondTagId" resultType="int">
		<include refid="count_SELECT"></include>
		<include refid="songMenu_base_FROM"></include>
		<include refid="smi_gl_rsms_JOIN"></include>
		<include refid="secondTagId_WHERE"></include>
	</select>

	<select id="selectListByCreatorId" resultType="cn.xiedacon.vo.SimpleSongMenuVo">
		<include refid="simpleSongMenuVo_SELECT"></include>
		<include refid="songMenu_base_FROM"></include>
		<include refid="songMenu_recored_JOIN"></include>
		<include refid="creatorId_WHERE"></include>
		<include refid="userId_ORDERBY"></include>
	</select>

	<select id="selectListByCollectorId" resultType="cn.xiedacon.vo.SimpleSongMenuVo">
		<include refid="simpleSongMenuVo_SELECT"></include>
		<include refid="songMenu_base_FROM"></include>
		<include refid="songMenu_recored_JOIN"></include>
		<include refid="user_gl_songmenu_JOIN"></include>
		<include refid="collectorId_WHERE"></include>
	</select>

	<insert id="insertSongMenu_base" parameterType="cn.xiedacon.model.SongMenu">
		INSERT INTO
		songMenu_base VALUES(
		#{id},
		#{name},
		#{icon},
		#{creatorName},
		#{createTime},
		#{songNum},
		#{introduction},
		#{isPublic},
		#{creatorId},
		#{userId},
		#{visible}
		)
	</insert>

	<insert id="insertSongMenu_record" parameterType="cn.xiedacon.model.SongMenu">
		INSERT INTO
		songMenu_record VALUES(
		#{id},
		#{collectionNum},
		#{shareNum},
		#{commentNum},
		#{playNum}
		)
	</insert>

	<update id="updateCreatorNameByCreatorId" parameterType="java.lang.String">
		UPDATE songMenu_base s SET s.creatorName = #{creatorName}
		<include refid="creatorId_WHERE"></include>
	</update>

	<delete id="delete" parameterType="cn.xiedacon.model.SongMenu">
		UPDATE songMenu_base s SET
		s.visible = false
		<include refid="id_WHERE"></include>
	</delete>

	<update id="update" parameterType="cn.xiedacon.model.SongMenu">
		UPDATE songMenu_base s
		SET s.name = #{name},
		s.introduction =
		#{introduction}
		<include refid="id_WHERE"></include>
	</update>

	<update id="updateIconById" parameterType="java.lang.String">
		UPDATE songMenu_base s
		SET s.icon = #{icon}
		<include refid="id_WHERE"></include>
	</update>

	<update id="updateSongNumById">
		UPDATE songMenu_base s
		SET s.songNum = #{songNum}
		<include refid="id_WHERE"></include>
	</update>

	<update id="updateCollectionNumById">
		UPDATE songMenu_record sr
		SET sr.collectionNum =
		#{collectionNum}
		WHERE sr.id = #{id}
	</update>
	<update id="updatePlayNumById">
		UPDATE songMenu_record sr
		SET sr.playNum =
		#{playNum}
		WHERE sr.id = #{id}
	</update>
	<update id="updateCommentNumById">
		UPDATE songMenu_record sr
		SET sr.commentNum =
		#{commentNum}
		WHERE sr.id = #{id}
	</update>
</mapper>