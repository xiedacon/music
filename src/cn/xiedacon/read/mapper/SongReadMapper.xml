<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xiedacon.read.dao.SongReadDao">

	<select id="selectListBySongMenuIdOrderByTime" resultType="cn.xiedacon.model.Song">
		SELECT
		s.id id,
		s.name name,
		s.icon icon,
		s.time time,
		s.singerId singerId,
		s.singerName singerName,
		s.albumId albumId,
		s.albumName albumName
		FROM song_base s
		INNER JOIN song_gl_songmenu sgs ON sgs.songId = s.id
		WHERE sgs.songMenuId = #{songMenuId} AND s.visible = true
		ORDER BY sgs.time ASC
	</select>

	<select id="selectListByAlbumIdOrderByRank" resultType="cn.xiedacon.model.Song">
		SELECT
		s.id id,
		s.name name,
		s.icon icon,
		s.time time,
		s.singerId singerId,
		s.singerName singerName,
		s.albumId albumId,
		s.albumName albumName,
		sga.rank rank
		FROM song_base s
		INNER JOIN song_gl_album sga ON sga.songId = s.id
		WHERE sga.albumId = #{albumId}
		ORDER BY sga.rank ASC
	</select>

	<select id="selectListBySongListIdOrderByRank" resultType="cn.xiedacon.model.Song">
		SELECT
		s.id id,
		s.name name,
		s.icon icon,
		s.time time,
		s.singerId singerId,
		s.singerName singerName,
		s.albumId albumId,
		s.albumName albumName,
		sgs.rank rank,
		sgs.rankChange rankChange
		FROM song_base s
		INNER JOIN song_gl_songlist sgs ON sgs.songId = s.id
		WHERE sgs.songListId = #{songListId}
		ORDER BY sgs.rank ASC
	</select>
	
	<select id="selectListBySongListIdOrderByRankLimit" resultType="cn.xiedacon.model.Song">
		SELECT
		s.id id,
		s.name name,
		s.icon icon,
		s.time time,
		s.singerId singerId,
		s.singerName singerName,
		s.albumId albumId,
		s.albumName albumName,
		sgs.rank rank,
		sgs.rankChange rankChange
		FROM song_base s
		INNER JOIN song_gl_songlist sgs ON sgs.songId = s.id
		WHERE sgs.songListId = #{songListId}
		ORDER BY sgs.rank ASC
		LIMIT 0,#{limit}
	</select>

	<select id="selectById" resultType="cn.xiedacon.model.Song">
		SELECT
		s.id id,
		s.name name,
		s.icon icon,
		s.time time,
		s.singerId singerId,
		s.singerName singerName,
		s.albumId albumId,
		s.albumName albumName,
		s.remark remark,
		sr.commentNum commentNum
		FROM song_base s
		INNER JOIN song_record sr ON s.id = sr.id
		WHERE s.id = #{id}
	</select>

	<select id="selectLyricUriById" resultType="java.lang.String">
		SELECT s.lyricUri
		FROM song_base s
		WHERE s.id = #{id}
	</select>

	<select id="selectListBySingerIdOrderByCollectionNumLimit" resultType="cn.xiedacon.model.Song">
		SELECT
		s.id id,
		s.name name,
		s.icon icon,
		s.time time,
		s.singerId singerId,
		s.singerName singerName,
		s.albumId albumId,
		s.albumName albumName,
		sr.collectionNum collectionNum
		FROM song_base s
		INNER JOIN song_record sr ON s.id = sr.id
		WHERE s.singerId = #{singerId}
		ORDER BY sr.collectionNum DESC
		LIMIT #{begin},#{limit}
	</select>
	
	<select id="selectFileUriById" resultType="java.lang.String">
		SELECT s.fileUri
		FROM song_base s
		WHERE s.id = #{id}
	</select>

</mapper>